{"version":3,"sources":["components/watchlistitem.js","components/Nav.js","components/movieSlider.js","components/watchListBtn.js","components/loader.js","components/moviecover.js","components/form.js","components/movieCatalogue.js","components/mainContent.js","components/movieDetail.js","App.js","reportWebVitals.js","index.js"],"names":["WatchListItem","watchList","setWatchList","height","className","style","maxHeight","map","listItem","to","movie","id","src","poster_path","alt","title","minValue","maxValue","value","vote_average","text","styles","buildStyles","strokeLinecap","textSize","pathColor","textColor","trailColor","popularity","release_date","onClick","filter","wl","Nav","useState","setHeight","length","MovieSlider","movies","arrows","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","toFixed","overview","WatchListBtn","useEffect","localStorage","setItem","JSON","stringify","exist","addToWatchList","Loader","MovieCover","moviesCover","setMoviesCover","loader","setLoader","API_KEY","a","fetch","response","json","data","console","log","results","fetchMovies","setTimeout","dots","appendDots","customPaging","i","backgroundImage","backdrop_path","original_title","Form","setYear","setCategory","movieSearch","setMovieSearch","query","setQuery","yearArray","setYearArray","thisYear","Date","getFullYear","years","push","addYears","getMoviesByQuery","type","onChange","e","target","substring","year","Math","random","MovieCatalogue","setMovies","page","setPage","allPages","setAllPAges","category","isMounted","useRef","total_pages","current","fetchMoviesByCategory","pageCount","initialPage","marginPagesDisplayed","pageRangeDisplayed","selected","MainContent","MovieDetail","match","genres","setMovie","movieTrailer","setMovieTrailer","movieVideos","setMovieVideos","actors","setActors","similarMovies","setSimilarMovies","url","setUrl","params","trailer","video","key","cast","slice","fetchMovieTrailer","fetchActors","fetchSimilarMovies","budget","genre","name","width","viewBox","preserveAspectRatio","fill","points","frameborder","allow","allowfullscreen","actor","profile_path","original_name","character","index","active","document","querySelector","classList","remove","add","getAttribute","handleUrlUpdate","App","getItem","parse","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14982f8e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction WatchListItem({ watchList, setWatchList, height }) {\r\n\r\n    function deleteFromWatchList(movie) {\r\n        setWatchList(watchList.filter((wl) => wl.movie.id !== movie.id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\" style={{ maxHeight: `${height}px` }}>\r\n            {\r\n                watchList.map((listItem) => (\r\n                    <div key={listItem.movie.id} className=\"list-container\">\r\n                        <Link to={`/movie/${listItem.movie.id}`} className=\"list-item\">\r\n                            <img src={`http://image.tmdb.org/t/p/w200/${listItem.movie.poster_path}`} alt={listItem.movie.title} />\r\n                            <div className=\"item-detail\">\r\n                                <CircularProgressbar\r\n                                    className=\"vote\"\r\n                                    minValue=\"0\"\r\n                                    maxValue=\"10\"\r\n                                    value={listItem.movie.vote_average}\r\n                                    text={listItem.movie.vote_average === 0 ? \"0\" : listItem.movie.vote_average}\r\n                                    styles={buildStyles({\r\n                                        strokeLinecap: 'round',\r\n                                        textSize: '35px',\r\n                                        pathColor: 'white',\r\n                                        textColor: 'white',\r\n                                        trailColor: '#29323c',\r\n                                    })}\r\n                                />\r\n                                <div className=\"item-text\">\r\n                                    <span className=\"title\">{listItem.movie.title}</span>\r\n                                    <span className=\"info\">\r\n                                        <i className=\"fas fa-fire\"></i>\r\n                                        <span>{listItem.movie.popularity}</span>\r\n                                    </span>\r\n                                    <span className=\"info\">\r\n                                        <i className=\"fas fa-calendar-day\"></i>\r\n                                        <span>{listItem.movie.release_date}</span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                        <i onClick={() => deleteFromWatchList(listItem.movie)} className=\"fas fa-trash-alt trash\"></i>\r\n                        <div className=\"line\"></div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WatchListItem;","import React,{useState,useEffect} from 'react';\r\nimport WatchListItem from './watchlistitem';\r\n\r\nfunction Nav({watchList,setWatchList}){\r\n\r\n    const [height,setHeight] = useState(0);\r\n\r\n    function toggleHeight(){\r\n        if(height === 0)\r\n            setHeight(400);\r\n        else\r\n            setHeight(0);\r\n    }\r\n\r\n    return(\r\n        <div className=\"nav\">\r\n\r\n            <div className=\"main-nav\">\r\n                <div className=\"nav-logo\">\r\n                    <i className=\"fas fa-film\"></i>\r\n                    <span>Let's Watch</span>\r\n                </div>\r\n                <ul>\r\n                    <li className=\"watch-list\">\r\n                        <i onClick={toggleHeight} className=\"fas fa-tv\"></i>\r\n                        {watchList.length === 0 ? \r\n                            \"\" \r\n                            :\r\n                            <span className=\"watch-list-length\">{watchList.length}</span>\r\n                        }\r\n                        <WatchListItem watchList={watchList} setWatchList={setWatchList} height={height}/>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"sub-nav\">\r\n                <p>WATCH ALL KIND OF MOVIES FREE . ENJOY IT !</p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useState, useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport {Link} from 'react-router-dom'; \r\n\r\nfunction MovieSlider({movies,title}) {\r\n\r\n    var settings = {\r\n        arrows:false,\r\n        infinite: true,\r\n        autoplay:true,\r\n        autoplaySpeed:1500,\r\n        speed: 500,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 1,\r\n        responsive: [\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n                infinite: true,\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n                initialSlide: 2\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]\r\n      };\r\n\r\n    return (\r\n        <div className=\"topRated-slider\">\r\n            <h1 className=\"slider-title\">{title}</h1>\r\n            <Slider {...settings} >\r\n            {\r\n                movies.map(movie => (\r\n                    <Link to={`/movie/${movie.id}`} key={movie.id}>    \r\n                        <div className=\"slider-item\">\r\n                            <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\r\n                            <div className=\"item-detail\">\r\n                                <div className=\"item-vote\">\r\n                                    <p>{movie.vote_average.toFixed(2)}</p>\r\n                                </div>\r\n                                <div className=\"item-desc\">\r\n                                  <h5>{movie.title}</h5>\r\n                                    <p>{movie.overview}</p> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>    \r\n                ))\r\n            }\r\n            </Slider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieSlider;","import React ,{useEffect} from 'react';\r\n\r\nfunction WatchListBtn({watchList,setWatchList,movie}){\r\n    \r\n    useEffect(() => {\r\n        saveWatchListLocal();\r\n    }, [watchList]);\r\n\r\n    function saveWatchListLocal(){\r\n        localStorage.setItem('watchList',JSON.stringify(watchList));\r\n    }\r\n\r\n    function addToWatchList(movie){\r\n        var exist = false;\r\n      \r\n        //check if the movie ezist in the list\r\n        if(watchList.length > 0 ){\r\n          watchList.map(listItem => {\r\n            if(listItem.movie.id === movie.id)\r\n              return exist = true;\r\n            else\r\n              return exist = false;\r\n          });\r\n        }\r\n        else\r\n          setWatchList([...watchList,{movie}]);\r\n    \r\n        //add the movie if it doesnt exist to the list\r\n        if(!exist){\r\n          setWatchList([...watchList,{movie}]);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"watchListBtn\">\r\n            <button onClick={() => addToWatchList(movie)}><i className=\"fas fa-tv\"></i></button>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default WatchListBtn;","import React from 'react';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Link } from 'react-router-dom';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport WatchListBtn from './watchListBtn';\r\nimport Loader from './loader';\r\n\r\nfunction MovieCover({ watchList, setWatchList }) {\r\n\r\n  const [moviesCover, setMoviesCover] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n\r\n    //loader\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  async function fetchMovies() {\r\n    const response = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}`);\r\n    const data = await response.json();\r\n    console.log(data)\r\n    setMoviesCover(data.results);\r\n  }\r\n\r\n  var settings = {\r\n    arrows: false,\r\n    dots: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 2000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    appendDots: dots => <ul>{dots}</ul>,\r\n    customPaging: i => (\r\n      <div className=\"custom-dot\">\r\n        <i className=\"fas fa-circle\"></i>\r\n      </div>\r\n    ),\r\n    responsive: [\r\n      {\r\n        breakpoint: 650,\r\n        settings: {\r\n          dots: false\r\n        }\r\n      }\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      {\r\n        loader ?\r\n          <Loader />\r\n          :\r\n          <Slider {...settings}>\r\n            {\r\n              moviesCover.map(movie => (\r\n                <div className=\"main-slider-cover\" key={movie.id}>\r\n                  <Link to={`/movie/${movie.id}`}>\r\n                    <div className=\"slider-cover\" style={{ backgroundImage: `linear-gradient(to right, #29323c 0%, #4855630c 100%), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path})` }}>\r\n                      <div className=\"slider-cover-detail\">\r\n                        <div className=\"atwl\">\r\n                          <CircularProgressbar\r\n                            minValue=\"0\"\r\n                            maxValue=\"10\"\r\n                            value={movie.vote_average}\r\n                            text={movie.vote_average === 0 ? \"0\" : movie.vote_average}\r\n                            styles={buildStyles({\r\n                              strokeLinecap: 'round',\r\n                              textSize: '30px',\r\n                              pathColor: 'white',\r\n                              textColor: 'white',\r\n                              trailColor: '#485563',\r\n                            })}\r\n                          />\r\n\r\n                        </div>\r\n                        <div>\r\n                          <h3>{movie.title}<span className=\"original-title\">{movie.title !== movie.original_title ? `( ${movie.original_title} )` : \"\"}</span></h3>\r\n                          <p className=\"release_date\">{movie.release_date}</p>\r\n                          <p className=\"overview\">{movie.overview}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div >\r\n                  </Link >\r\n                  <div className=\"wlbtn\">\r\n                    <WatchListBtn watchList={watchList} setWatchList={setWatchList} movie={movie} />\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              ))\r\n            }\r\n          </Slider >\r\n      }\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default MovieCover;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form({setYear,setCategory}){\r\n\r\n    const [movieSearch, setMovieSearch] = useState([]);    \r\n    const [query, setQuery] = useState(\"\");    \r\n    const [yearArray,setYearArray] = useState([]);\r\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\r\n\r\n    useEffect( () => {\r\n        addYears();\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        getMoviesByQuery();\r\n    }, [query]);\r\n    \r\n    async function getMoviesByQuery(){\r\n        if(query.length >= 2){\r\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`); \r\n            const data = await response.json();\r\n            setMovieSearch(data.results);\r\n        }\r\n        else\r\n            setMovieSearch([]);\r\n    }\r\n\r\n    function updateQuery(e){\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    function addYears(){\r\n        var thisYear = new Date().getFullYear();\r\n        var years = [];\r\n\r\n        for(var i = thisYear ; i >= 2000 ; i--){\r\n            years.push(i);\r\n        }\r\n        setYearArray(years);\r\n    }\r\n\r\n    return(\r\n        <div className=\"search\">\r\n\r\n            <div className=\"search-bar\">\r\n                <input type=\"text\" id=\"search\" value={query} onChange={updateQuery}/>\r\n                <i className=\"fas fa-search\"></i>\r\n                <div className=\"search-list\">\r\n                    {\r\n                        movieSearch.map( movie => (\r\n                            <div key={movie.id} className=\"search-item\">\r\n                                <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\r\n                                <div className=\"search-detail\">\r\n                                    <Link to={`/movie/${movie.id}`}>\r\n                                        <p className=\"title\">{movie.title}</p>\r\n                                    </Link>\r\n                                    <p className=\"overview\">{movie.overview.substring(0,100)}</p> \r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"search-select\">\r\n                <div className=\"select\">\r\n                    <select onChange={ (e) => {setCategory(e.target.value)} }>\r\n                        <option value=\"popular\">Popular</option>\r\n                        <option value=\"upcoming\">Upcomming</option>\r\n                        <option value=\"top_rated\">TopRated</option>\r\n                        <option value=\"now_playing\">Now Playing</option>\r\n                    </select>\r\n                    <i className=\"fas fa-box\"></i>\r\n                </div>\r\n                \r\n                <div className=\"select\">\r\n                    <select onChange={ (e) => {setYear(e.target.value)} }>                        \r\n                        {yearArray.map( year => (\r\n                            <option key={Math.random() * 1000} value={year}>{year}</option>\r\n                        ))}\r\n                    </select>\r\n                    <i className=\"fas fa-calendar-day\"></i>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './form';\r\nimport Paginate from 'react-paginate';\r\nimport WatchListBtn from './watchListBtn';\r\nimport Loader from './loader';\r\n\r\nfunction MovieCatalogue({ watchList, setWatchList }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [year, setYear] = useState(null);\r\n    const [allPages, setAllPAges] = useState(20);\r\n    const [category, setCategory] = useState(\"\");\r\n    const isMounted = useRef(false);\r\n\r\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [page, year]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            fetchMoviesByCategory();\r\n        } else {\r\n            isMounted.current = true;\r\n        }\r\n    }, [category]);\r\n\r\n    async function fetchMovies() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${page}&primary_release_year=${year}`);\r\n        const data = await response.json();\r\n\r\n        setMovies(data.results);\r\n        setAllPAges(data.total_pages);\r\n    }\r\n\r\n    async function fetchMoviesByCategory() {\r\n\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&page=${page}`);\r\n        const data = await response.json();\r\n\r\n        setMovies(data.results);\r\n        setAllPAges(data.total_pages);\r\n    }\r\n\r\n    function handlePageChange(page) {\r\n        setPage(page.selected + 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"catalogue\">\r\n            <Form setYear={setYear} setCategory={setCategory} />\r\n            <div className=\"catalogue-list\">\r\n                {movies.map(movie => (\r\n                    <div key={movie.id} className=\"catalogue-item\">\r\n                        <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\r\n                        <div className=\"catalogue-item-detail\">\r\n                            <span className=\"title\">{movie.title}</span>\r\n                            <span className=\"overview\">{movie.overview.substring(0, 100)}</span>\r\n                            <Link to={`/movie/${movie.id}`}>\r\n                                <button>Watch now</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"heart\">\r\n                            <WatchListBtn watchList={watchList} setWatchList={setWatchList} movie={movie} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Paginate\r\n                pageCount={allPages}\r\n                initialPage={0}\r\n                marginPagesDisplayed={1}\r\n                pageRangeDisplayed={5}\r\n                marginPagesDisplayed={2}\r\n                previousLabel={<i className=\"fas fa-angle-left\"></i>}\r\n                nextLabel={<i className=\"fas fa-angle-right\"></i>}\r\n                containerClassName={'paginate-container'}\r\n                pageClassName={'paginate-item'}\r\n                activeClassName={'paginate-active-item'}\r\n                previousClassName={'paginate-previous'}\r\n                nextClassName={'paginate-next'}\r\n                disabledClassName={'paginate-disabled'}\r\n                breakClassName={'paginate-break'}\r\n                onPageChange={handlePageChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCatalogue;","import React, { useState, useEffect } from 'react';\r\nimport MovieSlider from './movieSlider';\r\nimport Moviecover from './moviecover';\r\nimport MovieCatalogue from './movieCatalogue';\r\nimport Loader from './loader';\r\n\r\n\r\nfunction MainContent({ watchList, setWatchList }) {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\r\n\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  async function fetchMovies() {\r\n    const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}`);\r\n    const data = await response.json();\r\n    setMovies(data.results);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Moviecover watchList={watchList} setWatchList={setWatchList} />\r\n      <MovieSlider movies={movies} title=\"top rated\" />\r\n      <MovieCatalogue watchList={watchList} setWatchList={setWatchList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport { Link } from 'react-router-dom';\r\nimport MovieSlider from './movieSlider';\r\nimport ReactPlayer from 'react-player';\r\nimport Loader from './loader';\r\n\r\nfunction MovieDetail({ match }) {\r\n\r\n    const [movie, setMovie] = useState({\r\n        genres: [],\r\n    });\r\n    const [movieTrailer, setMovieTrailer] = useState({});\r\n    const [movieVideos, setMovieVideos] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n    const [similarMovies, setSimilarMovies] = useState([]);\r\n    const [url, setUrl] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n\r\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n        fetchMovieTrailer();\r\n        fetchActors();\r\n        fetchSimilarMovies();\r\n\r\n        //loader\r\n        setLoader(true);\r\n        setTimeout( () => {\r\n            setLoader(false);\r\n        }, 1000);\r\n\r\n    }, [match]);\r\n\r\n    async function fetchMovies() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n\r\n        setMovie(data);\r\n    }\r\n\r\n    async function fetchMovieTrailer() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/videos?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n\r\n        const trailer = data.results.filter((video) => {\r\n            return video.type === \"Trailer\"\r\n        });\r\n\r\n        setMovieVideos(data.results);\r\n        setUrl(data.results[0].key);\r\n        setMovieTrailer(trailer[0]);\r\n    }\r\n\r\n    async function fetchActors() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n\r\n\r\n        setActors(data.cast.slice(0, 6));\r\n    }\r\n\r\n    async function fetchSimilarMovies() {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=${API_KEY}`);\r\n        const data = await response.json();\r\n\r\n        setSimilarMovies(data.results);\r\n    }\r\n\r\n    function handleUrlUpdate(e) {\r\n        const active = document.querySelector('.active');\r\n        if (active) {\r\n            active.classList.remove('active');\r\n        }\r\n        e.target.classList.add(\"active\")\r\n        setUrl(e.target.getAttribute(\"url\"));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loader ?\r\n                    <Loader/>\r\n                    :\r\n                    <div className=\"movie-detail\">\r\n                        <div className=\"movie-detail-cover\" style={{ backgroundImage: `linear-gradient(to right, #29323c 0%, #4855638c 100%), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path})` }}>\r\n                            <Link to=\"/\" className=\"goback\">\r\n                                <div >\r\n                                    <i className=\"fas fa-arrow-alt-circle-left\"></i>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"detail\">\r\n\r\n                                <span className=\"title\">{movie.title}</span>\r\n                                <span className=\"original-title\">{movie.title === movie.original_title ? \"\" : movie.original_title}</span>\r\n                                <div className=\"line\"></div>\r\n                                <span className=\"budget\">\r\n                                    <i className=\"fas fa-dollar-sign icon\"></i>\r\n                                    {movie.budget === 0 ? \"Unknown\" : movie.budget}\r\n                                </span>\r\n                                <span className=\"genres\">\r\n                                    <i className=\"fas fa-heart icon\"></i>\r\n                                    {\r\n                                        movie.genres.map(genre => (\r\n                                            <span key={genre.id} className=\"genre\">{genre.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </span>\r\n                                <span className=\"release_date\">{movie.release_date}</span>\r\n                                <span className=\"overview\">{movie.overview}</span>\r\n                            </div>\r\n\r\n                            <CircularProgressbar\r\n                                className=\"circuralBar\"\r\n                                minValue=\"0\"\r\n                                maxValue=\"10\"\r\n                                value={movie.vote_average}\r\n                                text={movie.vote_average === 0 ? \"0\" : movie.vote_average}\r\n                                styles={buildStyles({\r\n                                    strokeLinecap: 'round',\r\n                                    textSize: '30px',\r\n                                    pathColor: 'white',\r\n                                    textColor: 'white',\r\n                                    trailColor: '#485563',\r\n                                })}\r\n                            />\r\n\r\n\r\n                            <svg className=\"triangle\" width='100%' height=\"150px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\" fill=\"#485563\" >\r\n                                <polygon points=\"100,0 0,100 100,100\" />\r\n                            </svg>\r\n\r\n                            <iframe className=\"teaser\" width=\"720\" height=\"400\" src={`https://www.youtube.com/embed/${movieTrailer.key}`} title={movieTrailer.title} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"actors-container\">\r\n                            <h1>Actors</h1>\r\n                            <div className=\"actors\">\r\n                                {\r\n                                    actors.map(actor => (\r\n                                        <div key={actor.id} className=\"actor\">\r\n                                            <img src={`http://image.tmdb.org/t/p/w185/${actor.profile_path}`} alt={movie.title} />\r\n                                            <div>\r\n                                                <div className=\"actor-detail\">\r\n                                                    <span>Original Name</span>\r\n                                                    <p>{actor.original_name}</p>\r\n                                                </div>\r\n                                                <div className=\"actor-detail\">\r\n                                                    <span>Character Name</span>\r\n                                                    <p>{actor.character}</p>\r\n                                                </div>\r\n                                                <div className=\"actor-detail\">\r\n                                                    <span>Popularity</span>\r\n                                                    <p>{actor.popularity}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"player\">\r\n                            <div className='player-wrapper'>\r\n                                <ReactPlayer\r\n                                    className='react-player'\r\n                                    url={`https://www.youtube.com/watch?v=${url}`}\r\n                                />\r\n                                <div className=\"player-btns\">\r\n                                    {\r\n                                        movieVideos.map((video, index) => (\r\n                                            <div key={video.id} url={video.key} className={`player-btn ${index === 0 ? 'active' : ''}`} onClick={(e) => { handleUrlUpdate(e) }}>\r\n                                                <span>{video.type}</span> - {video.name}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <MovieSlider movies={similarMovies} title=\"Semilar Movies\" />\r\n                    </div >       \r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch ,Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Nav from './components/Nav';\r\nimport MainContent from './components/mainContent';\r\nimport MovieDetail from './components/movieDetail';\r\n\r\nfunction App() {\r\n\r\n  const [watchList,setWatchList] = useState([]);\r\n  \r\n  useEffect(() => {\r\n        getWatchListLocal();\r\n  }, []);\r\n\r\n  function getWatchListLocal(){\r\n      if (localStorage.getItem('watchList') !== null) {\r\n          setWatchList(JSON.parse(localStorage.getItem('watchList')));\r\n      }\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <Router>\r\n          <Nav watchList={watchList} setWatchList={setWatchList} />\r\n            <Switch>\r\n              <Route path=\"/movie/:id\" component={MovieDetail} />\r\n              <MainContent watchList={watchList} setWatchList={setWatchList} />\r\n            </Switch>\r\n          </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}